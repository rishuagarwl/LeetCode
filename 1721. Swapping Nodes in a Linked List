/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        ListNode* temp =head;
        ListNode* left =head;
        ListNode* right= head;
        int count=0;
        while(temp->next !=NULL){
            count++;
            temp= temp->next;
        }
        for(int i=0; i<k-1;i++){
            left= left->next;
        }
        int n= (count-k)+1;
        for(int i=0; i<n; i++){
            right= right->next;
        }
        swap(left->val, right->val);
        return head;
    }
};

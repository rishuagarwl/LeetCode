class Solution {
public:
    void merge(vector<int>&nums, int i, int mid, int j){
        vector<int>temp;
        int left = i, right = mid+1;
        while(left<=mid && right<=j){
            if(nums[left]<=nums[right]){
                temp.push_back(nums[left++]);
            }
            else{
                temp.push_back(nums[right++]);
            }
        }
        while(left<=mid){
            temp.push_back(nums[left++]);
        }
        while(right<=j){
            temp.push_back(nums[right++]);
        }
        for(auto it : temp){
            nums[i++] = it;
        }
    }
    void mergeSort(vector<int>&nums, int i, int j){
        if(i==j) return ;
        int mid = i+ (j-i)/2;
        mergeSort(nums, i, mid);
        mergeSort(nums, mid+1, j);
        merge(nums, i,mid, j);
    }
    vector<int> sortArray(vector<int>& nums) {
        mergeSort(nums, 0, nums.size()-1);
        return nums;
    }
};
